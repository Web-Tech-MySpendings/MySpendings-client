{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/add-spending/add-spending.component.ts","./src/app/resource.service.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/app/view/view.component.ts","./src/app/add-spending/add-spending.component.html","./src/app/auth-service.service.ts","./src/app/app.component.ts","./src/app/login/login.component.html","./src/app/app.module.ts","./src/app/saldo/saldo.component.html","./src/app/view/view.component.html","./src/app/saldo/saldo.component.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthServiceService } from '../auth-service.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  formGroup: FormGroup;\n  pw1: Text;\n  pw2: Text;\n  samePw: boolean;\n\n  constructor(\n    private authService: AuthServiceService,\n    public router: Router\n    ) { }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n\n  //Body of http-request:\n  initForm(){\n    this.formGroup=new FormGroup({\n      email: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required]),  \n      password: new FormControl('', [Validators.required]),\n      pass2: new FormControl('', [Validators.required])\n    })\n  }\n\n\n  //TODO: remove if/else?\n  registerProcess(){\n    if(this.formGroup.valid){\n      this.authService.register(this.formGroup.value).subscribe(result=>{\n       \n        this.router.navigate(['']);\n        /*\n        if(result.success){\n          console.log(result);\n          alert(result.message);  \n        }else {\n          alert(result.message);\n        }\n        */\n      }), (error)=> {\n        console.log(error)\n        alert(\"Registration failed\");\n    }\n    }\n  }\n\n  checkPassword(){\n    if(this.pw1 == this.pw2){\n      this.samePw = true;\n    }else{\n      this.samePw = false;\n    }\n  }\n\n}\n","import { Component, OnInit, ElementRef  } from '@angular/core';\nimport { CommonModule, CurrencyPipe} from '@angular/common';\n\n\n@Component({\n  selector: 'app-add-spending',\n  templateUrl: './add-spending.component.html',\n  styleUrls: ['./add-spending.component.css']\n})\nexport class AddSpendingComponent implements OnInit {\n\n  formattedAmount;\n  amount;\n\n  constructor(private currencyPipe : CurrencyPipe) {\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  transformAmount(element){\n    this.formattedAmount = this.currencyPipe.transform(this.formattedAmount, '€');\n\n    element.target.value = this.formattedAmount;\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, pipe } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { API } from './../environments/environment';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourceService {\n\n\n  private tokenRefresh(callbackFunction): void {\n    this.http.get(API.baseUrl + '/token', {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',  \n        'Authorization': this.cookieService.get(\"refreshToken\")\n      }),\n      observe: \"response\"\n    }).subscribe(result => {\n      if (result.status === 200) {\n        this.cookieService.set('token', result.body['token']);\n        this.cookieService.set('refreshToken', result.body['refreshToken']);\n        callbackFunction();\n      }\n    })\n  }\n\n  private checkForInvalidAccess(response): boolean {\n    if (response.status === 401) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService\n  ) { }\n\n  getAllSpendings(): Observable<any> {\n    //tokenRefresh();\n    return this.http.get(API.baseUrl + '/spendings', {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.cookieService.get(\"token\")\n      }),\n      observe: \"response\"\n    }).pipe(\n      map(response => {\n        if (this.checkForInvalidAccess(response)) {\n          this.tokenRefresh(this.getAllSpendings);\n        }\n        else {\n          return response;\n        }\n      })\n    );\n  }\n}\n","<div fxLayoutAlign=\"center center\" fxFlexFill class=\"main-div\">\n  <mat-card fxFlex=\"25\">\n\n    <mat-toolbar color=\"primary\">Register</mat-toolbar>\n\n    <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" [formGroup]=\"formGroup\" (ngSubmit)=\"registerProcess()\">\n\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input matInput type=\"text\" placeholder=\"Name\" formControlName=\"name\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input [(ngModel)]=\"pw1\" matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\"\n          (change)=\"checkPassword()\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Repeat Password</mat-label>\n        <input [ngStyle]=\"{'color':samePw === true ? 'green' : 'red' }\" [(ngModel)]=\"pw2\" matInput type=\"password\"\n          placeholder=\"Password\" formControlName=\"pass2\" (change)=\"checkPassword()\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>E-Mail</mat-label>\n        <input matInput type=\"email\" placeholder=\"E-Mail\" formControlName=\"email\">\n      </mat-form-field>\n\n      <button mat-raised-button type=\"submit\">Register</button>\n    </form>\n\n  </mat-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n\nexport const API = {\n  baseUrl: 'https://my-spendings-server.herokuapp.com'\n}\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { ResourceService } from '../resource.service';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\n//for Table\nelements: any = [];\nheadElements = ['Value', 'Date', 'Category', 'Comment'];\n\nconstructor(\n  private cookieService: CookieService,\n  public router: Router,\n  private resourceService: ResourceService\n) { }\n\nngOnInit(): void {\n  this.loadTable();\n}\n\naddSpending() {\n  console.log(\"add spending!\")\n  this.router.navigate(['add']);\n\n}\n\nlogout() {\n  console.log(\"logout\")\n  this.cookieService.delete('token');\n  this.cookieService.delete('refreshToken');\n  this.router.navigate(['login']);\n}\n\n//TODO: get this data from server\nprivate loadTable() {\n\n  this.resourceService.getAllSpendings().subscribe(result => {\n\n    console.log(result);\n    let data: any = result.body;\n\n    for (let i = 0; i < data.length; i++) {\n      this.elements.push({\n        value: data[i].value,\n        spending: data[i].sid,\n        date: data[i].date.substring(0,10),\n        category: data[i].type,\n        comment: data[i].comment\n      });\n    }\n  })\n\n}\n\n}\n","<mat-card class=\"addSpending\">\n  <mat-form-field>\n    <mat-label>new Spending</mat-label>\n    <input matInput (blur)=\"transformAmount($event)\" [(ngModel)]=\"formattedAmount\" placeholder=\"0.00\" type=\"text\"\n      value=\"0.00\">\n  </mat-form-field>\n</mat-card>\n\n\n<mat-card class=\"categories\">\n  <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n    <mat-button-toggle value=\"Genral\">General</mat-button-toggle>\n    <mat-button-toggle value=\"Food\">Food</mat-button-toggle>\n    <mat-button-toggle value=\"Mobility\">Mobility</mat-button-toggle>\n    <mat-button-toggle value=\"Education\">Education</mat-button-toggle>\n    <mat-button-toggle value=\"Travel\">Travel</mat-button-toggle>\n    <mat-button-toggle value=\"Entertainment\">Entertainment</mat-button-toggle>\n  </mat-button-toggle-group>\n</mat-card>\n","//import { baseUrl } from '../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs'; \nimport { API } from './../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  constructor(private http:HttpClient) { }\n\n  login(data):Observable<any>{\n    return this.http.post(API.baseUrl+'/login',data, {observe: 'response'});  //login to local server from ex7.1\n  }\n\n  register(data):Observable<any>{\n    return this.http.post(API.baseUrl+'/register',data, {observe: 'response'});\n  }\n  \n}\n","import { Component, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MySpendings';\n}\n","<div fxLayoutAlign=\"center center\" fxFlexFill class=\"main-div\">\n  <mat-card fxFlex=\"25\">\n\n    <mat-toolbar color=\"primary\">Welcome to mySpendings</mat-toolbar>\n\n    <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\" [formGroup]=\"formGroup\"\n      (ngSubmit)=\"loginProcess()\">\n      <mat-form-field>\n        <mat-label>E-Mail</mat-label>\n        <input matInput type=\"email\" placeholder=\"E-Mail\" formControlName=\"email\">\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\" type=\"submit\">Log in</button>\n      <!--now allways links to saldo-->\n      <button mat-raised-button color=\"primary\" href=\"\" routerLink=\"/register\">Sign in</button>\n    </form>\n\n  </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\n\nimport {HttpClientModule} from '@angular/common/http';\n\n//Design imports: \nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatMenuItem, MatMenuModule} from '@angular/material/menu';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SaldoComponent } from './saldo/saldo.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AddSpendingComponent } from './add-spending/add-spending.component';\n\nimport { CommonModule, CurrencyPipe} from '@angular/common';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ViewComponent } from './view/view.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SaldoComponent,\n    RegisterComponent,\n    AddSpendingComponent,\n    ViewComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCardModule,\n    MatToolbarModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatMenuModule,\n    MatButtonToggleModule,\n  ],\n  providers: [\n    CurrencyPipe,\n    CookieService \n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n\n  \n\n}\n","<div class=\"appContainer\">\n  <mat-toolbar color=\"primary\">\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n      Menu\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item>\n        <span>Profile</span>\n      </button>\n      <button mat-menu-item>\n        <span>Charts</span>\n      </button>\n      <button mat-menu-item>\n        <span>Logout</span>\n      </button>\n    </mat-menu>\n    <span>mySpendings</span>\n  </mat-toolbar>\n</div>\n","<app-saldo></app-saldo>\n\n<mat-card class=\"balance\">\n  <span id=\"span1\">€ </span>\n  <span>0.00</span>\n  <button mat-flat-button color=\"primary\" id=\"btn_logout\" (click)=\"logout()\">Logout</button>\n</mat-card>\n\n<mat-card class=\"diagram\">\n  <table mat-table maxHeight=\"200\" bordered=\"true\">\n    <thead>\n      <tr>\n        <th *ngFor=\"let head of headElements; let i = index\" scope=\"col\">{{head}}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let el of elements; let i = index\">\n        <th scope=\"row\">€ {{el.value}}</th>\n        <td>{{el.date}}</td>\n        <td>{{el.category}}</td>\n        <td>{{el.comment}}</td>\n\n      </tr>\n    </tbody>\n  </table>\n</mat-card>\n\n<mat-card class=\"add\">\n  <button mat-fab color=\"primary\" id=\"btn_plus\" (click)=\"addSpending()\">+</button>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { ResourceService } from '../resource.service';\nimport {MatMenuModule} from '@angular/material/menu';\n\n@Component({\n  selector: 'app-saldo',\n  templateUrl: './saldo.component.html',\n  styleUrls: ['./saldo.component.css']\n})\nexport class SaldoComponent implements OnInit {\n\n  matMenu: MatMenuModule;\n\n  constructor(\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { SaldoComponent } from './saldo/saldo.component';\nimport { AddSpendingComponent } from './add-spending/add-spending.component';\nimport { ViewComponent } from './view/view.component';\n\n\nconst routes: Routes = [\n  {path:'', component: LoginComponent},\n  {path:'register', component: RegisterComponent},\n  {path:'login', component: LoginComponent},\n  {path:'view', component: ViewComponent},\n  {path: 'add', component: AddSpendingComponent}  //just for test purpose \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { AuthServiceService } from '../auth-service.service';\nimport {Router} from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  formGroup: FormGroup;\n  \n\n  constructor(\n    private authService: AuthServiceService, \n    public router: Router,\n    private cookieService: CookieService\n    ) \n    {   \n           \n    }\n\n  ngOnInit(): void {\n    this.initForm();\n    \n  }\n\n  //Body of http-request:\n  initForm(){\n    this.formGroup=new FormGroup({\n      email: new FormControl('', [Validators.required]),  \n      password: new FormControl('', [Validators.required])\n    })\n  }\n  \n  loginProcess(){\n    if(this.formGroup.valid){\n      this.authService.login(this.formGroup.value).subscribe(result=>{\n        console.log(\"Login succeeded\")\n        \n\n        //Cookies: https://www.npmjs.com/package/ngx-cookie-service\n        this.cookieService.set( 'token', result.body.token   ); \n        this.cookieService.set( 'refreshToken', result.body.refreshToken ); \n        \n\n        this.router.navigate(['view']);\n\n      }), (error)=> {\n          console.log(error)\n          alert(\"Login failed\");\n      }\n      }\n    }\n  \n}\n","<router-outlet></router-outlet>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}